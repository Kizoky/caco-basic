class BasicsCoreHandler : EventHandler 
{
	actor Principal, Caco, Doot;
	actor DetentionRoomP, DetentionRoomB;
	Array<Actor> WanderPoint;
	
	override void WorldTick()
	{
		let player = players[consoleplayer].mo;
		
		let PrincipalOfSin = PrincipalBasics(Principal);
		if (PrincipalOfSin)
		{
			//PrincipalOfSin.InterestPoint.Copy(WanderPoint);
			
			PrincipalOfSin.CacoTeacher = Caco;
				
			PrincipalOfSin.DetentionRoomPlayer = DetentionRoomP;
			PrincipalOfSin.DetentionRoomSelf = DetentionRoomB;
		}
		
		let Dootka = DootBasics(Doot);
		if (PrincipalOfSin && Dootka && !Dootka.CopiedPoints)
		{
			//Dootka.InterestPoint.Copy(WanderPoint);
			Dootka.CopiedPoints = true;
		}
		
		/*
		let Cacod = CacoBasics(Caco);
		if (PrincipalOfSin && Cacod && !Cacod.CopiedPoints)
		{
			Cacod.InterestPoint.Copy(WanderPoint);
			Cacod.CopiedPoints = true;
		}
		*/
	}
	
	override void NetworkProcess (ConsoleEvent e)
	{
		if (e.Name ~== "GoalNull")
		{
			Caco.goal = null;
		}
		
		if (e.Name ~== "FinishedBook")
		{
			let player = players[e.Player].mo;
			if (player)
			{
				let BasicsP = BasicsPlayer(player);
				if (BasicsP)
				{
					BasicsP.FinishedBook();
				}
			}
		}
	}
	
	override void PlayerEntered (PlayerEvent e)
	{
		// check for multiplayer
	}
   
	override void WorldThingSpawned (Worldevent e)
	{
		let SpawnedThing = e.Thing;
		
		// Grab our famous people
		// There must be always one so the latter will get ignored
		if (SpawnedThing is 'CacoBasics' && !Caco)
			Caco = SpawnedThing;
			
		if (SpawnedThing is 'PrincipalBasics' && !Principal)
			Principal = SpawnedThing;
			
		// Grab the interest points for the Principal so he can randomly wander around the map
		if (SpawnedThing is 'PrincipalInterest')
		{
			WanderPoint.Push(SpawnedThing);
			Console.Printf("Total size: %d", WanderPoint.Size());
		}
		
		if (SpawnedThing is 'DetentionRoomPlayer')
			DetentionRoomP = SpawnedThing;
		
		if (SpawnedThing is 'DetentionRoomPrincipal')
			DetentionRoomB = SpawnedThing;
			
		if (SpawnedThing is 'DootBasics' && !Doot)
			Doot = SpawnedThing;
		
	}
	
	override void WorldThingDied(WorldEvent e)
	{	
		// check later for cheating
	}
}
