class BasicsActor : Actor
{
	Array<Actor> InterestPoint;
	actor lastTarget;
	
	virtual void Basics_GoBackToWander(actor WanderP)
	{
		BasicsCoreHandler Event;
		Event = BasicsCoreHandler(EventHandler.Find("BasicsCoreHandler"));
		
		// This MOSTLY fixes the abnormal crashes
		// by not going through a random array
		if (WanderP)
		{
			goal = null;
			target = WanderP;
			path.Clear();
			return;
		}
		
		if (Event && level.time % 17 == 0)
		{
			int rnd = random[wndr](0,Event.WanderPoint.Size()-1);
			
			if (Event.WanderPoint[rnd])
			{
				goal = null;
				target = Event.WanderPoint[rnd];
				path.Clear();
			}
		}
	}
	
	virtual void A_MovementChase(actor targ)
	{
		int oldDir = moveDir;
		moveDir = (8 * AngleTo(targ, true) / 360) % 8;
		if (!TryWalk())
		{
			moveDir = oldDir;
			if(!TryWalk())
			{
				for (int i = 1; i <= 4; ++i)
				{
					moveDir = (oldDir + i) % 8;
					if (TryWalk())
						break;
		
					moveDir = (oldDir - i) % 8;
					if (TryWalk())
						break;
				}
			}
		}
		
		// Face movement direction
		angle = 360 * moveDir / 8;
		if (angle > 180)
			angle -= 360;
	}
	
	virtual void A_BasicsChase()
	{
		// Follow target!
		if (target)
		{
			A_MovementChase(target);
		}
	}

}