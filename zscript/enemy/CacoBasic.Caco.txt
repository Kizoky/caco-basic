class CacoBasics : BasicsActor
{
	Array<Actor> InterestPoint;
	int TimeBeforeRuler, DontSpamSight;
	bool CopiedPoints;
	
	override void Tick()
	{
		Super.Tick();
		
		/*
		if (!target && CopiedPoints)
		{
			int rnd = random(0,InterestPoint.Size()-1);
			if (InterestPoint[rnd])
				target = InterestPoint[rnd];
		}
		*/
		
		if (target && target is 'PlayerPawn' && Distance2D(target) < 75)
		{
			target.A_StartSound("caco/gameover", CHAN_7);
			target.A_Face(self);
			A_Face(target); // probably not necessary
			target.A_TakeInventory("HUDViewable",1);
			target.A_Die();
		}
		
		if (target && TimeBeforeRuler < level.time)
		{
			if (goal)
				A_Face(goal);
			A_StartSound("caco/whip", CHAN_BODY);
			//A_Recoil(-6);
			TimeBeforeRuler = level.time + 35 * 3;
		}
		
		if (IsActorPlayingSound(CHAN_BODY))
		{
			if (!(InStateSequence(CurState, ResolveState("Whip"))))
			{
				SetStateLabel("Whip");
			}
			A_SetSpeed(3); A_Star();
		}
		else
		{
			// Every 2 seconds it checks if it can see the Player, if yes it will null it's goal out
			// so it will recalculate it's path to the Player
			if (CheckSight (target, SF_SeePastShootableLines) && level.time > DontSpamSight && Distance2D(target) > 150)
			{
				DontSpamSight = level.time + 35 * 2;
				goal = null;
			}
			
			A_SetSpeed(0);
		}
	
	}
	
	Default
	{
		Health 666;
		Radius 10;
		Height 10;
		Mass 400;
		Speed 0.25;
		PainChance 0;
		Monster;
		SeeSound "";
		PainSound "";
		DeathSound "";
		ActiveSound "";
		Obituary "$OB_CACO";
		HitObituary "$OB_CACOHIT";
		Tag "$FN_CACO";
		-SOLID
	}
	States
	{
	Spawn:
		CACO A 10 A_Look;
		Loop;
	See:
		CACO A 3 A_Star();
		Goto See;
	Whip:
		CACO BCDEDCB 3 A_Star();
		Goto See;
	Pain:
		HEAD E 3;
		HEAD E 3 A_Pain;
		HEAD F 6;
		Goto See;
	Death:
		HEAD G 8;
		HEAD H 8 A_Scream;
		HEAD I 8;
		HEAD J 8;
		HEAD K 8 A_NoBlocking;
		HEAD L -1 A_SetFloorClip;
		Stop;
	}
}