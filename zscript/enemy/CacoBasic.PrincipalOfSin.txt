class PrincipalBasics : PathFinder2
{
	Array<Actor> InterestPoint;
	int CurrentPoint, WaitBeforeActive;
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		
		WaitBeforeActive = level.time + 35 * 2;
	}
	
	override void Tick()
	{
		Super.Tick();
		
		if (!target && level.time > WaitBeforeActive)
		{
			target = InterestPoint[random(0,InterestPoint.Size()-1)];
		}
		
		if (target && Distance2D(target) < 100 || target is 'PlayerPawn')
		{
			target = null;
			goal = null;
			target = InterestPoint[random(0,InterestPoint.Size()-1)];
		}
	
	}
	
	Default
	{
		Health 250;
		Mass 10000000;
		PainChance 255;
		+NOICEDEATH
		+OLDRADIUSDMG
		Speed 5;
		PainSound "brain/pain";
		DeathSound "brain/death";
		-SOLID;
		Monster;
		Scale 0.8;
	}
	States
	{
	Spawn:
		BBRN A 1;
		Goto See;
	See:
		BBRN A 1 { if (target) A_Star(); }
		Loop;
	Pain:
		BBRN B 36 A_BrainPain;
		Goto Spawn;
	Death:
		BBRN A 100 A_BrainScream;
		BBRN AA 10;
		BBRN A -1 A_BrainDie;
		Stop;
	}
}

// Goes to these points chosen randomly when wandering and is not after the Player
class PrincipalInterest : Actor
{
    Default
    {
        Radius 16;
        Height 16;
		Scale 0.3;

        RenderStyle "Add";

        +NOGRAVITY
        +NOBLOCKMAP
    }

    States
    {
    Spawn:
        BBRN A 6 Bright
        {
            angle += 10;
        }
        Loop;
    }
}