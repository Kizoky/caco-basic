version "4.1.3"

// ZForms
#include "ZScript/ZFormsExamples/ZForms/Include.ZSC"

/** Examples **/
// A simple example menu
#include "ZScript/ZFormsExamples/SimpleMenu.ZS"

#include "zscript/enemy/CacoBasic.Caco.txt"
#include "zscript/enemy/CacoBasic.MrDoot.txt"
#include "zscript/enemy/CacoBasic.PrincipalOfSin.txt"

#include "zscript/inventory/CacoBasic.HUDViewable.txt"

#include "zscript/CacoBasic.Actor.txt"
#include "zscript/CacoBasic.Door.txt"
#include "zscript/CacoBasic.EventHandler.txt"
#include "zscript/CacoBasic.HUD.txt"
#include "zscript/CacoBasic.Player.txt"

//------------- Debug stuff
#include "zscript/RadiusDebug/RadiusDebug.zc" //made by Nash

#include "zscript/pathfinding/navmesh.zc"
#include "zscript/pathfinding/pathfinder.zc"

/*
class NavIndicator : Actor
{
    Default
    {
        Radius 16;
        Height 16;

        RenderStyle "Add";

        +NOGRAVITY
        +NOBLOCKMAP
    }

    States
    {
    Spawn:
        POSS ABCDEFGH 6 Bright
        {
            angle += 10;
        }
        Loop;
    }
}
*/

class NavPoint : Actor
{
    array<NavPoint> links;
    array<double>   costs;

    Default
    {
        Radius 8;
        Height 8;

        +NOBLOCKMAP
        +NOGRAVITY
    }

    override void PostBeginPlay()
    {
        //A_Log("(ZScript:NavPoint) Initializing...");  // DEBUG

        // Connect this NavPoint to every other NavPoint that can be reached without being blocked
        // Note: this means actors will try to walk over bottomless pits, etc.
        // It also means links may go through other Navs
        ThinkerIterator it = ThinkerIterator.Create("NavPoint");
        for (NavPoint nav = NavPoint(it.Next()); nav; nav = NavPoint(it.Next()))
        {
            if (nav == self)
                continue;
			
			if (!CheckSight (nav, SF_SeePastShootableLines | SF_SEEPASTBLOCKEVERYTHING)) continue;
			
            // Commented out because there seem to be some bugs w/ CheckSight
            if (CheckSight(nav))
            {
                links.Push(nav);
                costs.Push(Distance2d(nav));

                A_Log("(ZScript:NavPoint) Link added");    // DEBUG
            }
			
            // Just make sure it's possible to get from one Nav to the other w/o being blocked
            double angle = AngleTo(nav);
            bool passable = true;
            int stepCount = Distance2d(nav)/radius + 1;
            for (int i = 0; i < stepCount; ++i)
            {
                if (CheckBlock(0, AAPTR_DEFAULT, i*radius, 0, 0, angle))
                {
                    passable = false;
                    break;
                }
            }

            if (passable)
            {
                links.Push(nav);
                costs.Push(Distance2d(nav));

                //A_Log("(ZScript:NavPoint) Link added");    // DEBUG
            }
        }

        if (links.Size() == 0)
            A_Log("\c[Yellow](ZScript:NavPoint) Warning: No links created!");

        Super.PostBeginPlay();
    }
	
	States
	{
		Spawn:
			ABCD B 0;
			Goto Invis;
		Invis:
			TNT1 A 1;
			Loop;
	}
}


class Plan2
{
    array<NavPoint> path;   // NavPoints that path passes through
    double givenCost;       // Distance from starting point to last NavPoint in path
    double heuristicCost;   // Approx. distance from last NavPoint to the goal
}

class Pathfinder2 : Actor
{
    
}